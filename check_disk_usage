#!/usr/bin/env python3

import argparse
import logging
import os
import platform
import re
import subprocess
import sys
import time

logging.basicConfig(level="INFO", format='%(asctime)-15s %(levelname)s: %(message)s')

p = argparse.ArgumentParser(description="Prints subdirectory sizes.")
p.add_argument("-t", "--total")
p.add_argument("-v", "--verbose", action="store_true")
p.add_argument("path", help="gs:// or local path", nargs="*")
args = p.parse_args()

if not args.path:
	args.path = ["."]

for path in args.path:
	if path.startswith("gs://"):
		command = f"gsutil ls {path}"
	else:
		command = f"ls {os.path.abspath(path)}"

	subpaths = subprocess.check_output(command, shell=True, encoding="UTF-8").split()
	for path in subpaths:
		path = re.sub("/$", "", path)
		if path.startswith("gs://"):
			command = f"gsutil du -h -s {path}"
		else:
			if platform.system() == "Darwin":
			   command = f"du -h -d 0 {path}"
			else:
			   command = f"du -h -maxdepth 0 {path}"
		if args.verbose:
			logging.info(command)
		try:
			output = subprocess.check_output(command, shell=True, encoding="UTF-8")
			logging.info(output.strip("\n"))
		except Exception as e:
			logging.error("ERROR: %s", e)

